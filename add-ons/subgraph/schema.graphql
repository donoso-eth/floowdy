type Member @entity {
  id: ID!
  memberId: String!
  member: String!
  timestamp: BigInt!
  initTimestamp: BigInt!
  deposit: BigInt!
  flow: BigInt!
  flowGelatoId: String!
  flowDuration: BigInt!
  yieldAccrued: BigInt!
  amountLocked:BigInt!
  creditsRequested: [Credit!]! @derivedFrom(field: "requester")
  creditsDelegated: [MemberCredit!] @derivedFrom(field: "member")
}

type Pool @entity {
  id: ID!
  poolId: String!
  timestamp: BigInt!
  totalDeposit: BigInt!
  totalFlow: BigInt!
  totalYieldStake: BigInt!
  depositIndex: BigInt!
  flowIndex: BigInt!
  totalStaked:BigInt!
  totalDelegated:BigInt!
  percentageLocked:BigInt!
  totalYieldCredit:BigInt!
  liquidatedIndex:BigInt!
  totalLiquidated:BigInt!
  nrMembers: BigInt!
}



type Credit @entity {
  id: ID!
  requester: Member!
  handle: String
  bio: String
  initTimestamp: BigInt!
  finishPhaseTimestamp: BigInt!
  gelatoTaskId: String!
  status: BigInt!

  nrInstallments:BigInt!
  interval:BigInt!
  installment:BigInt!
  amount:BigInt!
  rate:BigInt!
  totalYield:BigInt!
  alreadyPayed:BigInt!
  GelatoRepaymentTaskId:String!

  delegatorsNr: BigInt!
  delegatorsRequired:BigInt!
  delegators: [MemberCredit!]! @derivedFrom(field: "credit")
  delegatorsAmount: BigInt!
  delegatorsGlobalFee:BigInt!

 
}

type MemberCredit @entity {
  id: ID! 
  member: Member!
  credit: Credit!
}

type ChartMonth @entity {
id:ID!
month: String!
year: String!
timestamp: BigInt!
balance: BigInt!
staked: BigInt!

}

